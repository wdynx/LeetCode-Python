from queue import Queue            
class Solution:
    def maxDistance(self, grid: List[List[int]]) -> int:
        if sum([sum(row) for row in grid])%(len(grid)*len(grid[0]))==0:
            return -1
        Q=Queue()
        for i in range(len(grid)):
            for j in range(len(grid)):
                if grid[i][j]==1:
                    Q.put((i,j))
        while not Q.empty():
            (x,y)=Q.get()
            if x>0 and grid[x-1][y]==0:
                grid[x-1][y]=grid[x][y]+1
                Q.put((x-1,y))
            if y>0 and grid[x][y-1]==0:
                grid[x][y-1]=grid[x][y]+1
                Q.put((x,y-1))
            if x<len(grid)-1 and grid[x+1][y]==0:
                grid[x+1][y]=grid[x][y]+1
                Q.put((x+1,y))
            if y<len(grid[0])-1 and grid[x][y+1]==0:
                grid[x][y+1]=grid[x][y]+1
                Q.put((x,y+1))
        return grid[x][y]-1
