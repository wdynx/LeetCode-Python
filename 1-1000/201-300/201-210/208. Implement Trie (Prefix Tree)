class Trie:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.dic={}

    def insert(self, word: str) -> None:
        """
        Inserts a word into the trie.
        """
        def helper(word,dic):
            if not word:
                dic[0]=0
                return
            if word[0] not in dic.keys():
                dic[word[0]]={}
            helper(word[1:],dic[word[0]])
        helper(word,self.dic)

    def search(self, word: str) -> bool:
        """
        Returns if the word is in the trie.
        """
        dic=self.dic
        for i in word:
            if not dic or i not in dic.keys():
                return False
            else:
                dic=dic[i]
        return 0 in dic.keys()

    def startsWith(self, prefix: str) -> bool:
        """
        Returns if there is any word in the trie that starts with the given prefix.
        """
        dic=self.dic
        for i in prefix:
            if not dic or i not in dic.keys():
                return False
            else:
                dic=dic[i]
        return True


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)
