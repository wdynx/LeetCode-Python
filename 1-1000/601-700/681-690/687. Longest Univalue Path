# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def singlePath(self,root):
        if root==None:
            return 0,0,0
        lleftmax,lrightmax,lcurmax=self.singlePath(root.left)
        rleftmax,rrightmax,rcurmax=self.singlePath(root.right)
        if root.left==None or root.left.val!=root.val:
            leftmax=0
        else:
            leftmax=1+max(lleftmax,lrightmax)
        if root.right==None or root.right.val!=root.val:
            rightmax=0
        else:
            rightmax=1+max(rleftmax,rrightmax)
        curmax=max(lcurmax,rcurmax,leftmax+rightmax)
        return leftmax,rightmax,curmax
        
    def longestUnivaluePath(self, root: TreeNode) -> int:
        return self.singlePath(root)[2]
