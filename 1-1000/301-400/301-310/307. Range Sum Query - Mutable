class TreeNode:
    def __init__(self, start, end, val):
        self.val = val
        self.start = start
        self.end = end
        self.left = None
        self.right = None
    
    # def __str__(self):
    #     return 'val: {}\nstart: {}\nend:{}\n'.format(self.val, self.start, self.end)

class NumArray:

    def __init__(self, nums: List[int]):
        self.root = self.buildTree(nums)
        self.nums = nums

    def update(self, i: int, val: int) -> None:
        change = val - self.nums[i]
        self.nums[i] = val
        p=self.root
        while p:
            p.val += change
            if p.left == p.right == None:
                break
            elif p.left.start <= i <= p.left.end:
                p = p.left
            else:
                p = p.right

    def sumRange(self, i: int, j: int) -> int:
        def helper(left, right, root):
            if left > right:
                return 0
            if root.start == left and root.end == right:
                return root.val
            else:
                return helper(left, min(root.left.end, right), root.left) + helper(max(root.right.start, left), right, root.right)
        return helper(i, j, self.root)

    def buildTree(self, nums):
        if not nums:
            return None
        tree_list = [TreeNode(i, i, nums[i]) for i in range(len(nums))]
        while len(tree_list)>1:
            next_list = []
            # for node in tree_list:
            #     print(node)
            # print()
            for i in range(len(tree_list) // 2):
                left=tree_list.pop(0)
                right=tree_list.pop(0)
                node=TreeNode(left.start, right.end, left.val + right.val)
                node.left=left
                node.right=right
                next_list.append(node)
            if tree_list:
                next_list.append(tree_list.pop())
            tree_list = next_list
        return tree_list[0]


# Your NumArray object will be instantiated and called as such:
# obj = NumArray(nums)
# obj.update(i,val)
# param_2 = obj.sumRange(i,j)
