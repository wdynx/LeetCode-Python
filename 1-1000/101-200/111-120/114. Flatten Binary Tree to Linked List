# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        def preorder(ls,root):
            ls.append(root)
            if root.left:
                preorder(ls,root.left)
            if root.right:
                preorder(ls,root.right)
        if not root:
            return
        ls=[]
        preorder(ls,root)
        for i in range(1,len(ls)):
            ls[i-1].left=None
            ls[i-1].right=ls[i]
        return
