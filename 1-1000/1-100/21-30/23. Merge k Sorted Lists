# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        def merge(list1,list2):
            list3=ListNode(0)
            p1,p2,p3=ListNode(0),ListNode(0),ListNode(0)
            p1.next,p2.next,p3.next=list1,list2,list3
            while p1.next and p2.next:
                if p1.next.val<p2.next.val:
                    p3.next.next=p1.next
                    p3=p3.next
                    p1.next=p1.next.next
                else:
                    p3.next.next=p2.next
                    p3=p3.next
                    p2.next=p2.next.next
            if p1.next:
                p3.next.next=p1.next
            else:
                p3.next.next=p2.next
            return list3.next
        while len(lists)>1:
            newList=[]
            for i in range((len(lists)+1)//2):
                if 2*i+1<len(lists):
                    newList.append(merge(lists[2*i],lists[2*i+1]))
                else:
                    newList.append(lists[2*i])
            lists=newList
        if lists:
            return lists[0]
        else:
            return lists
