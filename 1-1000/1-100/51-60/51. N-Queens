class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        def check(ls):
            if len(ls)<=1:
                return True
            for i in range(len(ls)-1):
                if abs(ls[i]-ls[-1])==len(ls)-1-i:
                    return False
            return True
        
        def add(n,ls,res):
            board=[['.']*n for _ in range(n)]
            for i in range(n):
                board[i][ls[i]]='Q'
            res.append(list(map(lambda x:''.join(x),board)))
        
        def helper(n,ls,remain,res):
            for element in remain:
                ls.append(element)
                if check(ls):
                    if len(ls)==n:
                        add(n,ls,res)
                    else:
                        helper(n,ls,remain-{element},res)
                ls.pop()
        res=[]
        ls=[]
        remain=set(range(n))
        helper(n,ls,remain,res)
        return res
