class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        res=[-1,-1]
        flag=0
        left,right=0,len(nums)-1
        if not nums or nums[0]>target or nums[-1]<target:
            return res
        while not flag and left<right:
            mid=(left+right)//2
            if nums[mid]==target:
                flag=1
            elif nums[mid]<target:
                left=mid+1
            else:
                right=mid-1
        if flag==0:
            if nums[left]==target:
                return [left,left]
            else:
                return res
        else:
            res=[mid,mid]
            ll,lr=0,mid-1
            while lr>ll and nums[ll]<target and nums[lr]==target:
                if lr-ll>=2:
                    lm=(lr+ll)//2
                    if nums[lm]==target:
                        if res[0]>lm:
                            res[0]=lm
                        lr=lm
                    else:
                        ll=lm
                else:
                    if res[0]>lm:
                        res[0]=lr
                    break
            if nums[ll]==target and ll<res[0]:
                res[0]=ll
            rl,rr=mid+1,len(nums)-1
            while rr>rl and nums[rl]==target and nums[rr]>target:
                if rr-rl>=2:
                    rm=(rr+rl)//2
                    if nums[rm]==target:
                        if res[1]<rm:
                            res[1]=rm
                        rl=rm
                    else:
                        rr=rm
                else:
                    if res[1]<rm:
                        res[1]=rl
                    break
            if nums[rr]==target and rr>res[1]:
                res[1]=rr
        return res
