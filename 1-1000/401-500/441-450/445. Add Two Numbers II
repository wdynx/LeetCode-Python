# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        ls1=[]
        ls2=[]
        ls=[]
        head1,head2=l1,l2
        while head1:
            ls1.append(head1.val)
            head1=head1.next
        while head2:
            ls2.append(head2.val)
            head2=head2.next
        flag=0
        for i in range(-1,-2-max(len(ls1),len(ls2)),-1):
            cur=(ls1[i] if -i<=len(ls1) else 0)+(ls2[i] if -i<=len(ls2) else 0)+flag
            ls.append(cur%10)
            flag=cur//10
        if ls==[]:
            return None
        else:
            while ls and ls[-1]==0:
                ls.pop()
            if ls==[]:
                return ListNode(0)
            res=ListNode(ls[-1])
            p=res
            for i in range(-2,-1-len(ls),-1):
                p.next=ListNode(ls[i])
                p=p.next
            return res
